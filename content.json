{"pages":[{"title":"关于我","text":"WeChat: 569666228 QQ: 569666228","link":"/about/index.html"},{"title":"文章分类","text":"","link":"/categories/index.html"},{"title":"文章标签","text":"","link":"/tags/index.html"},{"title":"archives","text":"","link":"/archives/index.html"}],"posts":[{"title":"Hexo博客使用 (一)：基于Hexo-Github的个人博客框架","text":"参考：https://www.bilibili.com/video/BV1Yb411a7ty?from=search&amp;seid=10467841374186798749 本文为Hexo搭建博客记录一，内容为本地搭建博客，配置远端github信息。 主题：Hexo-Next6 需要npm，git，nodejs（windows平台cmder自动集成所有工具，故使用cmder就可以） 12345678# 查看node版本node -v# 查看npm版本npm -v# 使用国内cnpm加速镜像(可选)npm install -g cnpm --registry=https://registry.npm.taobao.org# 查看hexo版本hexo -v 基本思路：本地生成静态网页，部署到远端仓库（github或者gitee），其中github上传后自动部署，但是访问速度慢；gitee自动部署功能收费。本教程基于github远端仓库配置。 &nbsp; 在github为本机配置ssh信息安装好git后有两个地方需要配置： 个人信息，包括user.name和user.email ssh秘钥信息，使此台电脑与你的远端仓库相连接 配置个人信息：使用cmder或者使用git bash here 12git config --global user.name \"Your Name\"git config --global user.email \"email@example.com\" 配置秘钥信息 12ssh-keygen -t rsa -C \"yourEmailAddress\" # 一路回车cd ~/.ssh # 或者直接打开C盘/用户/.ssh文件夹，复制id_rsa.pub 注意要复制公钥文件，然后打开g自己的github，按照路径自己头像 &gt;&gt; settings &gt;&gt; SSH and GPG keys &gt;&gt;New SSH key，将pub文件上传，即完成秘钥配对 &nbsp; 全局安装hexo1npm install -g hexo-cli # 或者cnpm install -g hexo-cli &nbsp; 创建需要保存博客的文件夹，然后进入文件夹(以文件夹名blog为例)1234# 切换工作目录cd blog# 初始化hexohexo init 经过初始化后的文件夹结构如下图所示 12345-- source | -- _post : 存放博客文件- - themes : 存放主题文件-- _config.yml: 站点配置文件-- package.json: 已安装插件列表 &nbsp; 创建博客并生成本地预览12345678# 创建博客md文件，文件生成在./source/_posthexo n \"我的第一篇博客\"# 生成hexo g# 本地预览hexo s 登陆localhost端口正常显示，至此本地环境配置完成，下一步需要配置github远端 &nbsp; 配置远端github部署仓库注意仓库名必须和用户名相同：用户名.github.io，填写相关信息后创建仓库 &nbsp; 在博客目录下安装hexo git推送工具warning信息可以忽略 12cd blognpm install --save hexo-deployer-git # 或者cnpm安装 &nbsp;&nbsp; 设置站点配置文件打开blog文件夹下的_config.yml文件，设置最后几行远端推送的信息 12345# 注意冒号后面的空格不可以省略deploy: type: git repo: https://github.com/Winkids-Lu/winkids-lu.github.io.git branch: master &nbsp; 提交生成后输入命令提交 12hexo ghexo d 出现下面的情况，需要输入你的github用户名和密码，之后成功提交 注意，如果报错please tell me who you are，证明是为配置git信息，需要告诉git个人信息 &nbsp; 打开浏览器输入yourname.github.io，正常访问，配置结束P.S. 每次提交之前建议按照hexo clean ==&gt; hexo g ==&gt; hexo d的顺序 避免每次提交都要输入用户名和密码的相关操作，请自行百度 &nbsp; 绑定自定义的域名以我的.top后缀域名为例，首先注册域名并通过实名认证，然后进行域名解析。通过阿里云新手引导会自动添加@和www两条记录，由于github page是虚拟服务器，需要将这两条引导类型更改为CNAME 然后回到Gitpage，路径为博客仓库页面——Settings下拉 注意：个人域名只有经过了实名认证才能够正常使用","link":"/2020/05/22/Hexo01/"},{"title":"Hexo博客使用 (二)：Hexo基本使用与图床","text":"创建页面并进行页面管理，以及提供了github+picgo的图床解决方案。 页面操作创建页面创建的页面用于侧边框显示，常见页面有主页、标签、分类、归档、关于等。 查看站点配置文件或者主题配置文件里对于menu的结构描述，按照所标定的结构进行创建。例如我的主题配置文件里有下面的内容 123456789menu: 主页: / || fa fa-home 标签: /tags/ || fa fa-tags 分类: /categories/ || fa fa-th 归档: /archives/ || fa fa-archive 关于我: /about/ || fa fa-user #schedule: /schedule/ || fa fa-calendar #sitemap: /sitemap.xml || fa fa-sitemap #commonweal: /404/ || fa fa-heartbeat 以标签为例，标签: /tags/ || fa fa-tags，“标签”代表在页面中显示的名称，默认为tags，可以改成中文显示。/tags/为标签页面的生成路径，见下面生成页面操作 标签页tags12cd bloghexo new page \"tags\" # 创建tags页面 创建成功后会提升在source文件夹下出现结构：/source/tags/index.md 修改md文件为（仅需要填写type内容，注意冒号后面有一个空格） 123title: tagsdate: 2020-05-22 19:43:06type: tags 分类页categories123456cd bloghexo new page \"categories\" # 创建categories页面, /source/categories/index.md# 修改相页面的index文件title: categoriesdate: 2020-05-22 19:43:06type: categories 归档页与上述操作类似 关于页创建后在index可以自定义显示内容 &nbsp; 页面使用（标签页tags与分类页categories） 在文章抬头，键入分类信息： 12345678title: Hexo博客使用 (二)：Hexo基本使用与图床date: 2020-05-22 19:20:40tags: - Hexo- Blog # 输入需要分类的标签，之后所输入内容会在tags页面归类显示， 多个标签显示方法categories: - Hexo # 输入文章分类，之后文章会归类在categories页面显示 分类嵌套的显示方法：需要修改相应的配置文件 Tips: 页面的title部分可以修改为自定义显示内容 所有页面必须先创建，再修改配置信息，才能在博文中使用 关注主题配置文件中的menu结构 当修改配置文件支持mathjax后，需要在开头注明mathjax: true &nbsp; 博客图床方案 参考 https://www.bilibili.com/video/BV1f4411z73J?from=search&amp;seid=16559740816327465749 使用图床存储博客需要用到的图片，不占用本地空间，方便外链接访问。 Github仓库方案：图片上传困难，不稳定，空间受限（200M），并且博客图片加载速度慢 七牛云：免费域名一个月时间，使用自己的域名还需要备案操作(备案需要已购买了云服务器)，过程较为繁琐 阿里云OOS：购买OOS对象存储（9元/年），后期按照上传流量计费 下文涉及两种图片解决方案，目前在使用的是阿里云OOS+PicGo &nbsp; Github+picgo方案使用本地上传到github部署的图片会拖慢网页加载的速度，这里使用Github+PicGo+JSD的图床解决方案。图片通过picgo上传到github自建仓库，并生成外链接用于在markdown文件中通过链接引用图片。 步骤： 在github上创建仓库，仓库命名随意，必须设置为public 建立token，github我的头像 ==&gt; Settings ==&gt; Developer Settings ==&gt; Personal access tokens ==&gt; generate new tokens。简介随意，必须repo内的全部选项，注意token内容创建只显示一次 下载PicGo并配置(Github上下载PicGo) 仓库名格式：github用户名/仓库名 分支名：默认master 设定token：复制刚才生成的token码 指定存储路径：可以不填，比如填写img/，就会在仓库中自动生成一个同名文件夹 自定义域名：使用JDK加速链接，格式https://cdn.jsdelivr.net/gh/用户名/仓库名/子集文件夹(可选) 文件上传成功后在相册中可以获取到上传图片的外链接，直接在markdown中引用即可 图片命名有’+’会导致上传失败 如遇到服务连接失败请百度解决方案 &nbsp; 阿里云OOS+picgo方案 购买阿里云OOS存储服务 新建bucket，设置权限为公开读 创建子用户并复制keyID，keyInfo 回到picgo设置","link":"/2020/05/22/Hexo02/"},{"title":"Linux（二）：常用Linux命令","text":"test","link":"/2020/05/25/Linux-bash/"},{"title":"Linux（一）：版本控制工具Git","text":"Git版本控制（版本迭代工具）教程 视频教程： 狂神说Java：Git 版本控制版本控制工具：实现多人协同开发，版本管理 Git安装反安装先删除与git有关的path环境变量，再从控制台卸载git软件 安装一路next即完成安装使用，任意文件夹下右键出现git bash here或者git GUI代表安装完成。 使用&nbsp; 基本Linux命令1234567891011cd 目录cd .. # 返回上一级 pwd # 显示当前目录clear # 清屏ls # 列出文件夹下所有文件touch # 新建文件mkdir # 创建文件夹rm index.js # 删除文件rm -r src # 删除src文件夹mv index.html test # 移动文件到文件夹history # 查看用过的历史命令 &nbsp; Git配置所有的配置文件都保存在本地。 系统设置：git/etc/.gitconfig/，如果是使用cmder，在其文件夹中的git-for-windows/etc内部的config文件 用户设置：在C盘用户文件夹中 12git config --global --list # 查看用户自己的配置git config --system --list # 查看git的系统配置 设置用户名和密码。必须设置，一次设置 12git config --global user.name \"你的用户名\"git config --global user.email \"你的邮箱\" &nbsp; Git基本理论（核心）Git在本地有三个工作区域，远端有一个远端仓库 Working Directory：本地工作区，本地代码存放的地方 Stage(Index)：暂存区，临时存放改动。他本质上是个文件，提交之后就放到了文件列表。git add . History：本地仓库repository，缓存区的文件提交之后归入本地仓库 Remote Directory：远端仓库，即github，gitee Git提交的工作流程 在工作目录添加，修改文件 将需要版本管理的文件放入暂存区，git add 文件 将暂存区的文件提交到本地仓库，git commit 本地仓库推送到远端，git push Git管理的文件有三种状态：已修改(Modified)，已暂存（Staged），已提交（Committed） &nbsp; Git项目搭建常用的六个工作命令： 本地仓库搭建12cd git_dirgit init # 初始化git 克隆远程仓库1git clone '仓库url' '克隆到本地的存储路径' &nbsp; Git文件操作（了解）版本控制的前提是了解文件所处的状态，文件的状态有以下几种： Untracked：未跟踪，新建的文件存在于文件夹中但是并没有加入到git仓库，通过git add变为Staged暂存状态 Unmodify：文件已经入库但是没有修改，此时通过修改文件变为Modified状态，通过git rm移出版本库变成Untracked状态 Modified：文件仅仅被修改过，可通过git add进入暂存状态，也可以使用git checkout返回Unmodified状态，即从库中取出覆盖掉原来的文件 Staged：执行git add提交到库中变成Unmodified状态，或者通过git reset HEAD filename取消暂存，文件恢复到Modified 12345git status # 查看当前的git状态touch hello.txt # 新建文件git add . # 提交到暂存区git status # 查看是否在暂存区git commit -m \"提交信息\" # 提交到本地仓库 忽略文件”.gitignore”12345*.txt # 忽略所有.txt结尾的文件!lib.txt # 除了lib.txt文件/temptemp/ # /在前表示向上忽略，在后面表示向下忽略doc/*.txt # 忽略doc下面以txt结尾的文件，但不包括doc其他子目录里的txt文件 &nbsp; 远端仓库搭建 github有的时候访问慢，国内有gitee 本机绑定SSH公钥实现免密码登录 1234# 进入 C:\\User\\Administrator\\.ssh 目录# 生成公钥ssh -keygen -t rsa # 指定加密算法# 将生成的公钥加入github &nbsp; Git分支说明与版本控制分支：版本管理与版本控制 123456789101112131415161718# 列出本地所有分支git branch# 列出所有远程分支git branch -r# 新建一个分支，但仍然停留在原分支里面git branch [branch-name]# 新建分支并切换到该分支git checkout -b [branch-name]# 删除分支git branch -d [branch-name]# 删除远程分支git push origin --delete [branch-name]git branch -dr [remote/branch]","link":"/2020/05/24/Linux-git/"},{"title":"Imbalanced Classification (一)：Review","text":"关于不平衡分类的综述笔记 What is Imbalanced Classification?常规的分类任务默认不同的类别数量相差不多，不平衡分类任务指的是在分类任务中某一类的样本数量明显少于其他类。例如这样的数量比：(0:99 1:1) 常规的分类任务默认所有样本对于损失函数的贡献程度相同，常使用准确率来衡量分类模型的性能：$$Accuracy=\\frac{TP+TN}{TP+TN+FP+FN}$$而在不平衡分类中，由于类间数量比例失衡，而常规的分类模型又视所有样本同等程度贡献，故若仍然按照Acc来评价，即使模型将所有样本都分类为多数类（错分所有的少数类），模型仍然能得到一个较高的准确率分数，然而这样的模型由于缺乏对于少数类样本的正确分类能力而没有意义。 类间不平衡问题在各个领域中普遍存在，如银行欺诈检测，雷达漏油检测，罕见病症判别等，由于异常数据数量少，常规分类模型容易错分少数类样本或者将少数类样本视为噪声而忽略，错分少数类样本将会带来严重的后果，例如造成经济损失，产生社会负面现象等。 所以，与传统机器学习分类任务相比，不平衡分类有着以下的特点： 关注点不同：传统分类任务单追求“正确分类样本”，不平衡分类任务则更强调“正确分类少数类样本” 评估指标不同：如上所述，对于不平衡分类任务，传统的评估指标已经不再使用 总结为：不平衡分类是一种强调模型对少数类样本的正确识别能力的特殊分类问题。 &nbsp; Nomenclature of Imbalanced Classification在了解不平衡分类之前，需要先明确不平衡分类的相关概念命名： 少数类/混淆矩阵正类(Positive)/Majority Class (Label=1)：样本数量较少的那一类，是不平衡分类中重点关注的类别 多数类/混淆矩阵负类(Negative)/Minority Class (Label=0)：样本数量较多的那一类，与少数类相对 不平衡比率(Imbalalced Ratio)：衡量数据集不平衡程度的量，计算为多数类数量除以少数类数量: $$IR=\\frac{N_{majority}}{N_{minority}},\\quad N=number$$ 异常率：这个概念与实际业务场景相关，比如违约率，罕见病率，为少数类样本数量除以全集样本数量 &nbsp; Methods of Imbalanced Classification面对不平衡分类问题，现有研究集中在数据层面和算法层面，简单概括为： Data Level：Resampling在数据层面上，重采样方法希望达到平衡不同类别样本的数量以消除数量差，从而间接增加了少数类样本的比重。实施方法有过采样类方法和欠采样类方法，这里仅简述原理，具体的后面文章中展开 过采样类方法：增加少数类样本的数量以达到类间样本的数量平衡 欠采样类方法：减少多数类样本的数量以达到类间样本的数量平衡 Algorithm Level：Ensemble Learning如果单个分类器对于不平衡数据敏感，那么算法层面的集成学习的思想就是构造多个若分类器组成强分类器，与传统的集成学习不同，不平衡分类集成学习一般在集成中同时应用Resampling的思想 Algorithm Level：Cost-Sensitive Learning算法层面另一个研究方向是代价敏感学习，顾名思义，关注混淆矩阵中的FP和FN，在错分时设置惩罚代价，并将这些代价加入到损失函数中，模型为了最小化损失值，开始关注减少这些样本的错分类，从而增强了模型对于少数类样本的学习能力 Post-hock Adjusting由于不平衡分类问题的特殊性，选择的评估指标使用默认的阈值可能没法达到较为理想的效果（如Logistic Regression将0.5设定为阈值，大于0.5输出结果1，小于则输出结果为0），该类研究的思想是希望调整最后的分类阈值，使模型能够适应类间样本数量不平衡的特点。 &nbsp; Metrics of Imbalanced Learning Confusion Matrix：分类问题常用的混淆矩阵，不平衡分类重点关注在不大范围降低Precision的同时增加Recall，即提升模型对于少数类样本的正确分类能力 AUCROC：ROC受试者工作曲线下面积 AUCPR：PR曲线下面积 G-means F1-Score &nbsp; Tools of Imbalanced Learning Machine Learning API：Scikit-Learning，Pandas，Numpy Imbalanced Learning API：imblearn Cost-Sensitive Learning：Costcla Package，Weka","link":"/2020/05/26/imbalanced-classification-review/"},{"title":"Hexo博客使用(三)：Hexo-Next主题美化","text":"最新本Next主题（&gt;=v6.0）https://github.com/theme-next/hexo-theme-next 参考：https://blog.csdn.net/nightmare_dimple/article/details/86661502 主题美化涉及安装插件，修改源代码文件，修改站点配置文件和主题配置文件等，一般站点配置文件/blog/_config.yml和主题配置文件/blog/themes/next/_config.yml需要同时改动。 基础设置站点配置文件12345678# Site节点基本信息title: Utopia # 博客标题subtitle: Be what you wanner be # 副标题description: 'Wechat: 569666228' # 描述信息keywords:author: Winkids language: zh-CN # 查看主题文件/languages下的语言支持timezone: Asia/Shanghai # 可以不填 主题安装12cd bloggit clone https://github.com/theme-next/hexo-theme-next themes/next 启用主题站点配置文件修改：注意冒号后面有空格 1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next 改变主题风格主题配置文件 123456789# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemes# scheme: Muse# scheme: Mistscheme: Pisces#scheme: Gemini 主题菜单编辑页面跳转必须要提前创建归档页 123456789menu: 主页: / || fa fa-home 标签: /tags/ || fa fa-tags 分类: /categories/ || fa fa-th 归档: /archives/ || fa fa-archive 关于我: /about/ || fa fa-user #schedule: /schedule/ || fa fa-calendar 日历 #sitemap: /sitemap.xml || fa fa-sitemap 站点地图 #commonweal: /404/ || fa fa-heartbeat 评论 &nbsp; 主题美化网站图标主题配置文件，将需要替换的图标放到相应的文件夹中，一般只需要修改small和medium图标就够了 12345favicon: small: /images/favicon-16x16-next.png medium: /images/favicon-32x32-next.png apple_touch_icon: /images/apple-touch-icon-next.png safari_pinned_tab: /images/logo.svg 头像设置主题配置文件，url填写本地文件的相对路径，其他的看注释可以懂 1234567891011# Sidebar Avatar 侧边框头像avatar: # Replace the default image and set the url here. url: #/images/avatar.gif # If true, the avatar will be dispalyed in circle. rounded: false # If true, the avatar will be rotated with the cursor. rotated: false# Posts / Categories / Tags in sidebar.site_state: true 背景设置 canvas_nest设置： 12cd themes/nextgit clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest Github Bannerenable: true启用banner，可以修改github页面地址，提示信息 12345# `Follow me on GitHub` banner in the top-right corner.github_banner: enable: false permalink: https://github.com/yourname title: Follow me on GitHub 侧边栏设置头像后头像可以在侧边栏显示（Pisces或Gemini方案） 123sidebar: # Sidebar Position. position: left 侧边栏显示时机 12345678#post - 默认行为，在文章页面（拥有目录列表）时显示#always - 在所有页面中都显示#hide - 在所有页面中都隐藏（可以手动展开）#remove - 完全移除display: post#display: always#display: hide#display: remove 鼠标点击红心特效在/themes/next/source/js/src(新建文件夹src)下新建文件 clicklove.js ，接着把下面的代码拷贝粘贴到 clicklove.js 文件中： 1!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e){t&amp;&amp;t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document); 在\\themes\\next\\layout\\_layout.swig文件末尾添加： 12&lt;!-- 页面点击小红心 --&gt;&lt;script type=\"text/javascript\" src=\"/js/src/clicklove.js\"&gt;&lt;/script&gt; canvas_nest动态背景next自动集成了canvas_nest动画效果，在主题配置文件中加入如下代码段 1234567canvas_nest: # 网络背景 enable: true onmobile: true # display on mobile or not color: '0,0,0' # RGB values, use ',' to separate opacity: 0.5 # the opacity of line: 0~1 zIndex: -1 # z-index property of the background count: 150 # the number of lines 社交链接修改主题配置文件中Social Links中的相关内容，格式为：链接名: 链接地址 || 链接图标（图标为FontAwesome中的图标） 123456789101112131415# Social Links# Usage: `Key: permalink || icon`# Key is the link label showing to end users.# Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.social: GitHub: https://github.com/Winkids-lu || fab fa-github E-Mail: mailto:Winkids-lu@gmail.com || fa fa-envelope #Weibo: https://weibo.com/yourname || fab fa-weibo #Google: https://plus.google.com/yourname || fab fa-google #Twitter: https://twitter.com/yourname || fab fa-twitter #FB Page: https://www.facebook.com/yourname || fab fa-facebook #StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow #YouTube: https://youtube.com/yourname || fab fa-youtube #Instagram: https://instagram.com/yourname || fab fa-instagram #Skype: skype:yourname?call|chat || fab fa-skype 文章版权信息12345creative_commons: license: by-nc-sa sidebar: true post: true language: 设置文章摘要在默认设置下，在文中显示摘要的部分加入 1&lt;!--more--&gt; 会自动生成阅读全文按钮（Next7） 文章结束标志在路径 \\themes\\next\\layout\\_macro 中新建 passage-end-tag.swig 文件,并添加以下内容：注意如果不是UTF-8编码可能出现中文乱码的情况 12345&lt;div&gt; {% if not is_index %} &lt;div style=\"text-align:center;color: #ccc;font-size:14px;\"&gt;-------------本文结束&lt;i class=\"fa fa-paw\"&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt; {% endif %}&lt;/div&gt; 接着打开\\themes\\next\\layout\\_macro\\post.swig文件，在post-body 之后(END POST BODY)， post-footer 之前添加如代码： 12345678910111213 {#################} {### POST BODY ###} {#################}&lt;div&gt; {% if not is_index %} {% include 'passage-end-tag.swig' %} {% endif %}&lt;/div&gt; {#####################} {### END POST BODY ###} {#####################} 打开主题配置文件，在末尾加入 123# 文章末尾添加“本文结束”标记passage_end_tag: enabled: true 主页文章阴影效果打开\\themes\\next\\source\\css\\_custom\\custom.styl,（路径不足需要补齐）向里面加入： 12345678// 主页文章添加阴影效果 .post { margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); } 添加live2d看板娘——页面动态动画参考：https://blog.csdn.net/wang_123_zy/article/details/87181892 步骤1：更新hexo-helper-live2d 12npm uninstall hexo-helper-live2d # 卸载旧版本npm install hexo-helper-live2d # 安装新版本 安装成功，在根目录node_models可以看到live2d-widget文件夹 步骤2：下载相应的动画文件，npm install 主题名（如下） 12345678910111213141516171819202122live2d-widget-model-chitoselive2d-widget-model-epsilon2_1live2d-widget-model-gflive2d-widget-model-haru_01live2d-widget-model-haru_02live2d-widget-model-harutolive2d-widget-model-hibikilive2d-widget-model-hijikilive2d-widget-model-izumilive2d-widget-model-koharulive2d-widget-model-mikulive2d-widget-model-nicolive2d-widget-model-nietzschelive2d-widget-model-ni-jlive2d-widget-model-nipsilonlive2d-widget-model-nitolive2d-widget-model-shizukulive2d-widget-model-tororolive2d-widget-model-tsumikilive2d-widget-model-unitychanlive2d-widget-model-wankolive2d-widget-model-z16 步骤3：在站点配置文件中添加 123456789101112131415live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false model: use: live2d-widget-model-tororo #选择哪种模型 display: #放置位置和大小 position: left width: 200 height: 350 mobile: show: true #是否在手机端显示 &nbsp; 字体以及背景美化参考：https://blog.csdn.net/weixin_40837922/article/details/88047241 更改背景","link":"/2020/05/22/Hexo03/"}],"tags":[{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"Blog","slug":"Blog","link":"/tags/Blog/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"工具","slug":"工具","link":"/tags/%E5%B7%A5%E5%85%B7/"},{"name":"Imbalanced Classification","slug":"Imbalanced-Classification","link":"/tags/Imbalanced-Classification/"}],"categories":[{"name":"Hexo","slug":"Hexo","link":"/categories/Hexo/"},{"name":"Linux","slug":"Linux","link":"/categories/Linux/"},{"name":"Imbalanced Classfifcation","slug":"Imbalanced-Classfifcation","link":"/categories/Imbalanced-Classfifcation/"}]}